//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNotes.NotesService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="NotesService.INotes")]
    public interface INotes {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INotes/GetNotes", ReplyAction="http://tempuri.org/INotes/GetNotesResponse")]
        System.Data.DataSet GetNotes(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INotes/GetNotes", ReplyAction="http://tempuri.org/INotes/GetNotesResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetNotesAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INotes/DeleteNote", ReplyAction="http://tempuri.org/INotes/DeleteNoteResponse")]
        void DeleteNote(int userId, string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INotes/DeleteNote", ReplyAction="http://tempuri.org/INotes/DeleteNoteResponse")]
        System.Threading.Tasks.Task DeleteNoteAsync(int userId, string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INotes/AddNote", ReplyAction="http://tempuri.org/INotes/AddNoteResponse")]
        void AddNote(int userId, string id, string title, string content, string color, System.DateTime created, System.DateTime modified);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INotes/AddNote", ReplyAction="http://tempuri.org/INotes/AddNoteResponse")]
        System.Threading.Tasks.Task AddNoteAsync(int userId, string id, string title, string content, string color, System.DateTime created, System.DateTime modified);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INotes/EditNote", ReplyAction="http://tempuri.org/INotes/EditNoteResponse")]
        void EditNote(int userId, string id, string title, string content, string color, System.DateTime created, System.DateTime modified);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INotes/EditNote", ReplyAction="http://tempuri.org/INotes/EditNoteResponse")]
        System.Threading.Tasks.Task EditNoteAsync(int userId, string id, string title, string content, string color, System.DateTime created, System.DateTime modified);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INotes/GetLastModified", ReplyAction="http://tempuri.org/INotes/GetLastModifiedResponse")]
        System.DateTime GetLastModified(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INotes/GetLastModified", ReplyAction="http://tempuri.org/INotes/GetLastModifiedResponse")]
        System.Threading.Tasks.Task<System.DateTime> GetLastModifiedAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INotes/SetLastModified", ReplyAction="http://tempuri.org/INotes/SetLastModifiedResponse")]
        void SetLastModified(int userId, System.DateTime now);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INotes/SetLastModified", ReplyAction="http://tempuri.org/INotes/SetLastModifiedResponse")]
        System.Threading.Tasks.Task SetLastModifiedAsync(int userId, System.DateTime now);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface INotesChannel : MyNotes.NotesService.INotes, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NotesClient : System.ServiceModel.ClientBase<MyNotes.NotesService.INotes>, MyNotes.NotesService.INotes {
        
        public NotesClient() {
        }
        
        public NotesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public NotesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NotesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NotesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet GetNotes(int userId) {
            return base.Channel.GetNotes(userId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetNotesAsync(int userId) {
            return base.Channel.GetNotesAsync(userId);
        }
        
        public void DeleteNote(int userId, string id) {
            base.Channel.DeleteNote(userId, id);
        }
        
        public System.Threading.Tasks.Task DeleteNoteAsync(int userId, string id) {
            return base.Channel.DeleteNoteAsync(userId, id);
        }
        
        public void AddNote(int userId, string id, string title, string content, string color, System.DateTime created, System.DateTime modified) {
            base.Channel.AddNote(userId, id, title, content, color, created, modified);
        }
        
        public System.Threading.Tasks.Task AddNoteAsync(int userId, string id, string title, string content, string color, System.DateTime created, System.DateTime modified) {
            return base.Channel.AddNoteAsync(userId, id, title, content, color, created, modified);
        }
        
        public void EditNote(int userId, string id, string title, string content, string color, System.DateTime created, System.DateTime modified) {
            base.Channel.EditNote(userId, id, title, content, color, created, modified);
        }
        
        public System.Threading.Tasks.Task EditNoteAsync(int userId, string id, string title, string content, string color, System.DateTime created, System.DateTime modified) {
            return base.Channel.EditNoteAsync(userId, id, title, content, color, created, modified);
        }
        
        public System.DateTime GetLastModified(int userId) {
            return base.Channel.GetLastModified(userId);
        }
        
        public System.Threading.Tasks.Task<System.DateTime> GetLastModifiedAsync(int userId) {
            return base.Channel.GetLastModifiedAsync(userId);
        }
        
        public void SetLastModified(int userId, System.DateTime now) {
            base.Channel.SetLastModified(userId, now);
        }
        
        public System.Threading.Tasks.Task SetLastModifiedAsync(int userId, System.DateTime now) {
            return base.Channel.SetLastModifiedAsync(userId, now);
        }
    }
}
